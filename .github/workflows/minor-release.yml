name: Publish Release
on:
  workflow_dispatch:
jobs:
  build:
    permissions:
        packages: write
        contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
      # Step 3: Fetch all tags
    - name: Fetch tags
      run: git fetch --tags

      # Step 4: Determine the next version
    - name: Determine next version
      id: next-version
      run: |
          # Extract the latest tag
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: {$latest_tag}"
          
          # Remove the 'v' prefix if it exists
          version=${latest_tag#v}

          # Split version into components
          IFS='.' read -r major minor patch <<< "$version"

          # Increment the patch version
          patch=$((patch + 1))
          next_version="$major.$minor.$patch"

          # Output the next version
          echo "Next version: v$next_version"
          echo "tag=v$next_version" >> $GITHUB_ENV

    - name: Create a Release
      uses: elgohr/Github-Release-Action@v5
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: MyReleaseMessage
        tag:  ${{ env.tag }}
    - name : check this release     
      run: echo "Release ${{steps.next-version.outputs.tag}} created"